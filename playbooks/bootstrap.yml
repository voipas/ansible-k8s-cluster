---
# Management host
- hosts: mgmt
  pre_tasks:
    - name: Updating APT Cache
      apt:
        cache_valid_time: 1800
      become: true
  
- hosts: k8s
  any_errors_fatal: true
  roles:
    - role: ansible-ntp
    - role: ansible-apt-cacher-ng
      become: true
      tags:
        - apt-cacher-ng

- hosts: k8s_slaves
  any_errors_fatal: true
  pre_tasks:
    - name: Updating APT Cache
      apt:
        cache_valid_time: 1800
      become: true
  roles:
    - role: ansible-change-hostname

- hosts: k8s
  any_errors_fatal: true
  tasks:
    - name: Installing vim
      apt:
        name: vim
        state: present
      become: true

# We install dnsutils to provide us dig on the cluster nodes
    - name: Installing dnsutils
      apt:
        name: dnsutils
        state: present
      become: true

    - name: Disabling Swap
      service:
        name: dphys-swapfile
        enabled: false
        state: stopped
      become: true

    - name: Uninstalling dphys-swapfile
      apt:
        name: dphys-swapfile
        state: absent
      become: true

    - name: Configuring cmdline Boot
      template:
        src: templates/cmdline.txt.j2
        dest: /boot/cmdline.txt
      become: true
      register: _cmdline_boot

    - name: Restarting Host
      shell: sleep 2 && shutdown -r now "rebooting to complete hostname change"
      async: 1
      poll: 0
      ignore_errors: true
      become: true
      register: _reboot_slaves
      when: >
            _cmdline_boot['changed'] and
            inventory_hostname in groups['k8s_slaves']

    - name: Waiting For Host To Respond
      wait_for_connection:
        delay: 20
      when: _reboot_slaves['changed']

    # - command: ping -c 2 {{ hostvars[inventory_hostname]['ansible_host'] }}
    #   register: _ping
    #   until: _ping['rc'] == 0
    #   retries: 30
    #   delay: 2
    #   with_items: "{{ groups['k8s_slaves'] }}"
    #   when: _reboot_slaves['changed']

    - name: Restarting Host
      shell: sleep 2 && shutdown -r now "rebooting to complete hostname change"
      async: 1
      poll: 0
      ignore_errors: true
      become: true
      register: _reboot_master
      when: >
            _cmdline_boot['changed'] and
            inventory_hostname in groups['k8s_master']

    - name: Waiting For Host To Respond
      wait_for_connection:
        delay: 20
      when: _reboot_master['changed']

    # - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
    #   wait_for:
    #     port: 22
    #     host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
    #     search_regex: OpenSSH
    #     delay: 10
    #   connection: local
    #   when: _reboot_master['changed']